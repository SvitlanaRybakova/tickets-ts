apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-depl
spec:
  replicas:
    1
    # step 1 (selector => tells to deployments how to find all pods thar it's going to create)
  selector:
    matchLabels:
      app: orders
  # step 2 (template => tells to deployments how to create each individual pod)
  template:
    metadata:
      # should match selector=>matchLabels=>app
      labels:
        app: orders
    # tells to pod how to behave
    spec:
      containers:
        - name: orders # name only for login purposes
          image: sviry/orders # name of docker image to use
          # access to environment variable inside the cluster
          # (k create secret generic jwt-secret --from-literal=JWT_KEY=secret)
          env:
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NATS_URL
              value: 'http://nats-srv:4222'
            - name: NATS_CLUSTER_ID
              value: tickets
            - name: MONGO_URI
              value: 'mongodb://orders-mongo-srv:27017/orders' # the service name (orders-mongo-srv) from orders-mongo-depl.yaml, /orders -random db name inside service
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_KEY

---
# service config
apiVersion: v1
kind: Service
metadata:
  name: orders-srv
spec: # tells to service how to behave
  selector:
    # tells to service how to find the set of pods. Should match with template=>metadata=>labels=>app
    app: orders
  # may not specify due to default value will be ClusterIP
  type: ClusterIP
  ports:
    - name: orders
      protocol: TCP
      port: 3000
      targetPort: 3000
